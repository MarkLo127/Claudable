# apps/api/dockerfile
FROM python:3.11-slim

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PATH="/opt/venv/bin:/usr/local/bin:/root/.local/bin:${PATH}"

# 基礎工具
RUN apt-get update && apt-get install -y --no-install-recommends \
      curl ca-certificates gnupg git unzip bash build-essential \
    && rm -rf /var/lib/apt/lists/*

# Python venv + 依賴
RUN python -m venv /opt/venv \
 && pip install --upgrade pip setuptools wheel \
 && pip install fastapi "uvicorn[standard]" pydantic pydantic-settings \
               sqlalchemy alembic python-dotenv cryptography

# Node 20 + pnpm
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
 && apt-get install -y --no-install-recommends nodejs \
 && npm i -g pnpm \
 && rm -rf /var/lib/apt/lists/*

# 依你提供的安裝指令安裝各家 CLI（失敗不終止）
RUN npm install -g @anthropic-ai/claude-code       || true \
 && npm install -g @qwen-code/qwen-code@latest     || true \
 && npm install -g @google/gemini-cli              || true \
 && npm install -g @openai/codex                   || true

# 安裝 cursor-agent（容錯且建立穩定 symlink）
RUN set -eux; \
  curl https://cursor.com/install -fsSL | bash || true; \
  export PATH="$HOME/.local/bin:/usr/local/bin:$PATH"; \
  if [ -x "$HOME/.local/bin/cursor-agent" ]; then \
    ln -sf "$HOME/.local/bin/cursor-agent" /usr/local/bin/cursor-agent; \
  elif [ -d "$HOME/.local/share/cursor-agent/versions" ]; then \
    v=$(ls -1 "$HOME/.local/share/cursor-agent/versions" | sort -V | tail -1); \
    ln -sf "$HOME/.local/share/cursor-agent/versions/$v/cursor-agent" /usr/local/bin/cursor-agent; \
  fi

# 用 command -v 掃描實際安裝到的 binary，建立命令別名
RUN set -eux; \
  linkif() { src="$1"; dst="$2"; if command -v "$src" >/dev/null 2>&1; then ln -sf "$(command -v "$src")" "/usr/local/bin/$dst"; fi; }; \
  linkif claude-code    claude; \
  linkif qwen-code      qwen; \
  linkif gemini         gemini; \
  linkif google-gemini  gemini; \
  linkif codex          codex; \
  linkif dashscope      qwen; \
  true

# ★ 預先建立掛載點（避免 volume 掛載時找不到/或父路徑唯讀造成的 EROFS）
RUN mkdir -p \
    /root/.claude/plugins \
    /root/.claude/projects \
    /root/.claude/sessions \
    /root/.config/gemini \
    /root/.config/openai \
    /root/.qwen

WORKDIR /srv/api
COPY . /srv/api/

EXPOSE 8080
CMD ["uvicorn","app.main:app","--host","0.0.0.0","--port","8080"]
