services:
  backend:
    container_name: claudable_backend
    build:
      context: ./apps/api
      dockerfile: dockerfile          # 若你的檔名是 Dockerfile 就改成 Dockerfile
    ports:
      - "4090:8080"
    env_file:
      - .env                          # 後端讀取金鑰：ANTHROPIC_* / OPENAI_* / GOOGLE_* / GEMINI_* / DASHSCOPE_* / ENCRYPTION_KEY
    environment:
      HOME: /root
      XDG_CONFIG_HOME: /root/.config
      PORT: 8080
      PROJECTS_ROOT: /srv/data/projects
      PROJECTS_ROOT_HOST: /srv/data/projects
      # 讓後端進程能找到你安裝的 CLI（claude/gemini/qwen/codex/cursor-agent）
      PATH: "/opt/venv/bin:/usr/local/bin:/usr/bin:/bin:/root/.local/bin"
    volumes:
      - ./apps/api:/srv/api
      - ./data:/srv/data

      # 供應商憑證：父路徑唯讀，plugins 子資料夾可寫（避免 EROFS）
      - ${HOME}/.claude:/root/.claude:ro
      - claude_plugins:/root/.claude/plugins
      - ${HOME}/.config/openai:/root/.config/openai:ro
      - ${HOME}/.qwen:/root/.qwen:ro
      - ${HOME}/.config/gemini:/root/.config/gemini:ro

      # cursor-agent 資料
      - cursor_data:/root/.local/share/cursor-agent

      # 啟動腳本（若已 COPY 進 image，就移除此行）
      - ./apps/api/bootstrap-cursor.sh:/usr/local/bin/bootstrap-cursor.sh:ro
    working_dir: /srv/api
    command: ["/bin/bash","-lc","/usr/local/bin/bootstrap-cursor.sh uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload"]

  frontend:
    container_name: claudable_frontend
    build:
      context: ./apps/web
      dockerfile: dockerfile          # 若你的檔名是 Dockerfile 就改成 Dockerfile
    ports:
      - "5090:3000"
    environment:
      NODE_ENV: development
      # 瀏覽器上要打的 API（主機端口）
      NEXT_PUBLIC_API_URL: http://localhost:4090
      NEXT_PUBLIC_API_BASE: http://localhost:4090
      NEXT_PUBLIC_WS_BASE: ws://localhost:4090
      # 伺服器端（容器內）走服務名
      INTERNAL_API_URL: http://backend:8080
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./apps/web:/app
      - web_node_modules:/app/node_modules
      # 避免在本機倉庫生成 .pnpm / .pnpm-store
      - pnpm_store:/pnpm-store
      - pnpm_state:/pnpm-state
    working_dir: /app
    command: >
      bash -lc "
        corepack enable &&
        pnpm config set store-dir /pnpm-store &&
        pnpm config set state-dir /pnpm-state &&
        pnpm install &&
        pnpm dev -p 3000
      "

volumes:
  web_node_modules: {}
  pnpm_store: {}
  pnpm_state: {}
  cursor_data: {}
  claude_plugins: {}
