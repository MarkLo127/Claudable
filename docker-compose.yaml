version: "3.9"

services:
  frontend:
    container_name: claudable_frontend
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "5090:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4090
      - INTERNAL_API_URL=http://backend:8080
    depends_on:
      - backend
    volumes:
      - ./apps/web:/app
      - web_node_modules:/app/node_modules
    working_dir: /app
    command: >
      bash -lc "corepack enable &&
                pnpm install &&
                pnpm dev -p 3000"

  backend:
    container_name: claudable_backend
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - "4090:8080"
    env_file:
      - .env
    environment:
      - HOME=/root
      - XDG_CONFIG_HOME=/root/.config
    volumes:
      - ./apps/api:/srv/api
      - ./data:/srv/data
      # （可選）沿用本機已登入的憑證；若需在容器內更新，拿掉 :ro
      - ${HOME}/.claude:/root/.claude:ro
      - ${HOME}/.config/openai:/root/.config/openai:ro
      - ${HOME}/.qwen:/root/.qwen:ro
      - ${HOME}/.config/gemini:/root/.config/gemini:ro
      # cursor-agent 的資料卷
      - cursor_data:/root/.local/share/cursor-agent
      # 把啟動腳本掛進來（也可改成在 Dockerfile 內 COPY）
      - ../bootstrap-cursor.sh:/bootstrap-cursor.sh:ro
    working_dir: /srv/api
    # 讓 bootstrap 腳本最後 exec 我們的 uvicorn（它會把參數接著 exec）
    command: ["/bin/bash","-lc","/bootstrap-cursor.sh uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload"]

volumes:
  web_node_modules:
  cursor_data:
